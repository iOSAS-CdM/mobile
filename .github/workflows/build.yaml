name: üß± Build Android APK/AAB

on:
  push:
    branches:
      - release
  pull_request:
    branches:
      - release
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: üì¶ Checkout Repository
        uses: actions/checkout@v4

      - name: üß∞ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "yarn"

      - name: üì¶ Install Dependencies with Yarn
        run: yarn install --frozen-lockfile

      - name: ‚öôÔ∏è Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: ÔøΩ Create debug keystore (fallback)
        run: |
          mkdir -p android/app
          if [ ! -f android/app/debug.keystore ]; then
            keytool -genkey -v -keystore android/app/debug.keystore \
              -storepass android -alias androiddebugkey -keypass android \
              -keyalg RSA -keysize 2048 -validity 10000 \
              -dname "CN=Android Debug,O=Android,C=US"
          fi

      - name: ‚ö° Prebuild Expo for Android
        run: npx expo prebuild --platform android --clean

      - name: üèóÔ∏è Build Android APK (Release)
        run: |
          cd android
          ./gradlew assembleRelease --no-daemon --stacktrace

      - name: üèóÔ∏è Build Android AAB (Release Bundle for Play Store)
        run: |
          cd android
          ./gradlew bundleRelease --no-daemon --stacktrace

      - name: üì§ Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/release/*.apk
          retention-days: 30

      - name: üì§ Upload AAB Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: android/app/build/outputs/bundle/release/*.aab
          retention-days: 30

      - name: üìä Build Summary
        if: success()
        run: |
          echo "### ‚úÖ Build Successful!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**APK Location:** \`android/app/build/outputs/apk/release/\`" >> $GITHUB_STEP_SUMMARY
          echo "**AAB Location:** \`android/app/build/outputs/bundle/release/\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Download artifacts from the Actions tab above." >> $GITHUB_STEP_SUMMARY

      - name: üìã Get version from package.json
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: üìù Generate Release Notes
        id: release_notes
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')
          COMMIT_HASH=$(git log -1 --pretty=format:'%h')
          
          cat << EOF > release_notes.md
          ## üöÄ Release v${{ steps.get_version.outputs.version }}
          
          ### üì¶ Build Information
          - **Build Date**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          - **Commit**: ${COMMIT_HASH}
          - **Author**: ${COMMIT_AUTHOR}
          
          ### üìù Latest Commit
          ${COMMIT_MSG}
          
          ### üì• Downloads
          - **APK**: For direct installation on Android devices (testing)
          - **AAB**: For uploading to Google Play Store (production)
          
          ### üîß Installation Instructions
          
          **APK (Testing)**:
          1. Download the \`app-release.apk\` file below
          2. Transfer to your Android device
          3. Enable "Install from Unknown Sources" in settings
          4. Open and install the APK
          
          **AAB (Play Store)**:
          1. Download the \`app-release.aab\` file below
          2. Upload to Google Play Console
          3. Follow Google's release process
          
          ---
          Built with ‚ù§Ô∏è by GitHub Actions
          EOF
          
          cat release_notes.md

      - name: üè∑Ô∏è Create GitHub Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/release'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}-${{ github.run_number }}
          name: Release v${{ steps.get_version.outputs.version }} (Build ${{ github.run_number }})
          body_path: release_notes.md
          draft: false
          prerelease: false
          files: |
            android/app/build/outputs/apk/release/*.apk
            android/app/build/outputs/bundle/release/*.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


